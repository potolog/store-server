# spring.datasource.type=org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://61.41.4.26:3306/consumer_report?useSSL=true&verifyServerCertificate=false
spring.datasource.connectionProperties=useUnicode=true;characterEncoding=utf-8
spring.datasource.username=consumer_report
spring.datasource.password=con*1004
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# JPA
# 기존에 생성되 있던 테이블들을 삭제하고 새로 만듬
# spring.jpa.hibernate.ddl-auto=create
# create 와 같은 동작을 하나 종료시에 DROP 한다
# spring.jpa.hibernate.ddl-auto=create-drop
# 변경된 부분만 반영
spring.jpa.hibernate.ddl-auto=update
# 테이블과 Entity 가 매핑되는지 유효성 검사를 실행한다
# spring.jpa.hibernate.ddl-auto=validate
# 초기화 동작을 하지 않는다
# spring.jpa.hibernate.ddl-auto=none

spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=mysql
# spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect

spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

# JPA naming
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
